File: weaviate
Type: inuse_space
Time: Mar 7, 2024 at 1:09pm (CET)
Showing nodes accounting for 1565.04MB, 94.39% of 1658.11MB total
Dropped 313 nodes (cum <= 8.29MB)
      flat  flat%   sum%        cum   cum%
  390.70MB 23.56% 23.56%   390.70MB 23.56%  github.com/weaviate/sroar.(*Bitmap).fastExpand
  319.68MB 19.28% 42.84%   319.68MB 19.28%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*vertex).appendConnectionAtLevelNoLock
  229.42MB 13.84% 56.68%   229.42MB 13.84%  github.com/weaviate/weaviate/entities/storobj.(*Object).MarshalBinary
  146.03MB  8.81% 65.49%   146.03MB  8.81%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.BinaryQuantizer.Encode
  125.51MB  7.57% 73.06%   271.03MB 16.35%  github.com/weaviate/sroar.NewBitmapWith
      62MB  3.74% 76.79%   575.21MB 34.69%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchNode).insert
      53MB  3.20% 79.99%   611.16MB 36.86%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).AddBatch
   35.53MB  2.14% 82.13%    36.03MB  2.17%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMap).insert
      32MB  1.93% 84.06%       32MB  1.93%  github.com/weaviate/sroar.init
   26.15MB  1.58% 85.64%    26.15MB  1.58%  github.com/weaviate/weaviate/usecases/byteops.Float32FromByteVector (inline)
   23.06MB  1.39% 87.03%    23.06MB  1.39%  google.golang.org/grpc.nopBufferPool.Get
   22.38MB  1.35% 88.38%    22.38MB  1.35%  github.com/weaviate/weaviate/adapters/repos/db/vector/cache.(*shardedLockCache[go.shape.uint64]).Grow
      19MB  1.15% 89.53%   522.70MB 31.52%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).addOne
   17.61MB  1.06% 90.59%    17.61MB  1.06%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.ParseReplaceNode
   15.50MB  0.93% 91.52%    15.50MB  0.93%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw/visited.NewList (inline)
   14.08MB  0.85% 92.37%    14.08MB  0.85%  google.golang.org/protobuf/internal/impl.consumeBytesNoZero
   10.06MB  0.61% 92.98%    10.06MB  0.61%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*quantizedDistanceBag[go.shape.uint64]).Load
    9.92MB   0.6% 93.58%     9.92MB   0.6%  github.com/weaviate/weaviate/adapters/repos/db.New
    5.50MB  0.33% 93.91%   341.99MB 20.63%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).doAtLevel
    3.80MB  0.23% 94.14%    10.80MB  0.65%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).put
    1.50MB 0.091% 94.23%    12.06MB  0.73%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).selectNeighborsHeuristic
       1MB  0.06% 94.29%    16.43MB  0.99%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).searchLayerByVectorWithDistancer
    0.59MB 0.036% 94.33%    18.70MB  1.13%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*compactorReplace).writeKeys
    0.50MB  0.03% 94.36%   276.23MB 16.66%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleBatchInLSM.func1
    0.50MB  0.03% 94.39%   149.03MB  8.99%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*quantizedVectorsCompressor[go.shape.uint64]).Preload
         0     0% 94.39%    19.08MB  1.15%  github.com/golang/protobuf/proto.Unmarshal
         0     0% 94.39%    19.08MB  1.15%  github.com/golang/protobuf/proto.UnmarshalMerge
         0     0% 94.39%   245.17MB 14.79%  github.com/weaviate/sroar.(*Bitmap).Set
         0     0% 94.39%   244.58MB 14.75%  github.com/weaviate/sroar.(*Bitmap).SetMany (inline)
         0     0% 94.39%   390.11MB 23.53%  github.com/weaviate/sroar.(*Bitmap).newContainer
         0     0% 94.39%   271.03MB 16.35%  github.com/weaviate/sroar.NewBitmap (inline)
         0     0% 94.39%    29.70MB  1.79%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.(*Service).BatchObjects
         0     0% 94.39%    26.65MB  1.61%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.batchFromProto
         0     0% 94.39%    10.44MB  0.63%  github.com/weaviate/weaviate/adapters/handlers/rest.(*Server).ConfigureAPI (inline)
         0     0% 94.39%     9.92MB   0.6%  github.com/weaviate/weaviate/adapters/handlers/rest.MakeAppState
         0     0% 94.39%    10.44MB  0.63%  github.com/weaviate/weaviate/adapters/handlers/rest.configureAPI
         0     0% 94.39%   611.16MB 36.86%  github.com/weaviate/weaviate/adapters/repos/db.(*DB).worker
         0     0% 94.39%    13.50MB  0.81%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).AnalyzeObject
         0     0% 94.39%    25.03MB  1.51%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyMapBucket
         0     0% 94.39%       30MB  1.81%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertySetBucket
         0     0% 94.39%    46.03MB  2.78%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyValueIndex
         0     0% 94.39%    29.50MB  1.78%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).extendInvertedIndicesLSM
         0     0% 94.39%   281.73MB 16.99%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM
         0     0% 94.39%   240.72MB 14.52%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM.func1
         0     0% 94.39%       41MB  2.47%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateInvertedIndexLSM
         0     0% 94.39%   611.16MB 36.86%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateVectorIndexIgnoreDelete
         0     0% 94.39%    10.80MB  0.65%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).upsertObjectDataLSM
         0     0% 94.39%   278.73MB 16.81%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeObjectOfBatchInLSM
         0     0% 94.39%   611.16MB 36.86%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleObjectInAdditionalStorage
         0     0% 94.39%       13MB  0.78%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).Object
         0     0% 94.39%     8.50MB  0.51%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzePrimitiveProp
         0     0% 94.39%    10.50MB  0.63%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzeProps
         0     0% 94.39%     8.50MB  0.51%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).extendPropertiesWithPrimitive
         0     0% 94.39%    30.03MB  1.81%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).MapSet
         0     0% 94.39%    10.80MB  0.65%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).Put
         0     0% 94.39%    49.01MB  2.96%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).RoaringSetAddOne
         0     0% 94.39%    36.03MB  2.17%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).appendMapSorted
         0     0% 94.39%    64.01MB  3.86%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddList
         0     0% 94.39%    49.01MB  2.96%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddOne (inline)
         0     0% 94.39%    25.10MB  1.51%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*SegmentGroup).compactIfLevelsMatch
         0     0% 94.39%    25.10MB  1.51%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*SegmentGroup).compactOnce
         0     0% 94.39%    35.53MB  2.14%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMap).insert
         0     0% 94.39%    19.20MB  1.16%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*compactorReplace).do
         0     0% 94.39%    18.11MB  1.09%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*segmentCursorReplace).nextWithAllKeys
         0     0% 94.39%    18.11MB  1.09%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*segmentCursorReplace).parseReplaceNode
         0     0% 94.39%    83.01MB  5.01%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchTree).Insert
         0     0% 94.39%   515.12MB 31.07%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.NewBitmap
         0     0% 94.39%    22.38MB  1.35%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*quantizedVectorsCompressor[go.shape.uint64]).GrowCache
         0     0% 94.39%   611.16MB 36.86%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).Add
         0     0% 94.39%   341.99MB 20.63%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).findAndConnectNeighbors
         0     0% 94.39%    12.68MB  0.76%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).findBestEntrypointForNode
         0     0% 94.39%    30.94MB  1.87%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).growIndexToAccomodateNode
         0     0% 94.39%   341.99MB 20.63%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).Do
         0     0% 94.39%   320.18MB 19.31%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).connectNeighborAtLevel
         0     0% 94.39%    14.40MB  0.87%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw/visited.(*Pool).Borrow
         0     0% 94.39%    29.80MB  1.80%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).CycleCallback
         0     0% 94.39%    29.80MB  1.80%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackParallel.func1
         0     0% 94.39%    29.80MB  1.80%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackParallel.func1.1
         0     0% 94.39%    29.80MB  1.80%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackSequential
         0     0% 94.39%    29.80MB  1.80%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackSequential.func1
         0     0% 94.39%    47.29MB  2.85%  github.com/weaviate/weaviate/grpc/generated/protocol/v1._Weaviate_BatchObjects_Handler
         0     0% 94.39%    70.35MB  4.24%  google.golang.org/grpc.(*Server).handleStream
         0     0% 94.39%    70.35MB  4.24%  google.golang.org/grpc.(*Server).processUnaryRPC
         0     0% 94.39%    17.58MB  1.06%  google.golang.org/grpc.(*Server).processUnaryRPC.func2
         0     0% 94.39%    70.35MB  4.24%  google.golang.org/grpc.(*Server).serveStreams.func1.1
         0     0% 94.39%    23.06MB  1.39%  google.golang.org/grpc.(*parser).recvMsg
         0     0% 94.39%    23.06MB  1.39%  google.golang.org/grpc.recvAndDecompress
         0     0% 94.39%    17.58MB  1.06%  google.golang.org/grpc/encoding/proto.codec.Unmarshal
         0     0% 94.39%    18.58MB  1.12%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshal
         0     0% 94.39%    18.58MB  1.12%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshalPointer
         0     0% 94.39%    17.08MB  1.03%  google.golang.org/protobuf/internal/impl.consumeMessageSliceInfo
         0     0% 94.39%    19.08MB  1.15%  google.golang.org/protobuf/proto.UnmarshalOptions.UnmarshalState
         0     0% 94.39%    19.08MB  1.15%  google.golang.org/protobuf/proto.UnmarshalOptions.unmarshal
         0     0% 94.39%    10.94MB  0.66%  main.main
         0     0% 94.39%    39.72MB  2.40%  runtime.doInit (inline)
         0     0% 94.39%    39.72MB  2.40%  runtime.doInit1
         0     0% 94.39%    50.66MB  3.06%  runtime.main
