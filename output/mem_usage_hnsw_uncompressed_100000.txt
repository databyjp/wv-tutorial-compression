File: weaviate
Type: inuse_space
Time: Mar 7, 2024 at 12:09pm (CET)
Showing nodes accounting for 715.44MB, 95.72% of 747.45MB total
Dropped 174 nodes (cum <= 3.74MB)
      flat  flat%   sum%        cum   cum%
  497.40MB 66.55% 66.55%   497.40MB 66.55%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw/distancer.Normalize (inline)
   48.30MB  6.46% 73.01%    48.30MB  6.46%  github.com/weaviate/weaviate/entities/storobj.(*Object).MarshalBinary
      32MB  4.28% 77.29%       32MB  4.28%  github.com/weaviate/sroar.init
   30.51MB  4.08% 81.37%    30.51MB  4.08%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*vertex).appendConnectionAtLevelNoLock
   30.01MB  4.01% 85.39%    30.01MB  4.01%  github.com/weaviate/sroar.(*Bitmap).fastExpand
   15.09MB  2.02% 87.41%    15.09MB  2.02%  github.com/weaviate/weaviate/usecases/byteops.Float32FromByteVector (inline)
   14.50MB  1.94% 89.35%    36.50MB  4.88%  github.com/weaviate/sroar.NewBitmapWith
   13.61MB  1.82% 91.17%    13.61MB  1.82%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMap).insert
    9.92MB  1.33% 92.49%     9.92MB  1.33%  github.com/weaviate/weaviate/adapters/repos/db.New
    5.50MB  0.74% 93.23%     5.50MB  0.74%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*setEncoder).Do (inline)
    5.02MB  0.67% 93.90%     5.02MB  0.67%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.ParseReplaceNode
    4.08MB  0.55% 94.45%     9.10MB  1.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*compactorReplace).writeKeys
       4MB  0.54% 94.98%   539.87MB 72.23%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).AddBatch
       3MB   0.4% 95.38%    47.51MB  6.36%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchNode).insert
    1.50MB   0.2% 95.58%    35.58MB  4.76%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).addOne
       1MB  0.13% 95.72%    33.53MB  4.49%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).doAtLevel
         0     0% 95.72%        8MB  1.07%  github.com/weaviate/sroar.(*Bitmap).Set
         0     0% 95.72%        8MB  1.07%  github.com/weaviate/sroar.(*Bitmap).SetMany (inline)
         0     0% 95.72%    30.01MB  4.01%  github.com/weaviate/sroar.(*Bitmap).newContainer
         0     0% 95.72%    36.50MB  4.88%  github.com/weaviate/sroar.NewBitmap (inline)
         0     0% 95.72%    16.09MB  2.15%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.(*Service).BatchObjects
         0     0% 95.72%    15.09MB  2.02%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.batchFromProto
         0     0% 95.72%    11.43MB  1.53%  github.com/weaviate/weaviate/adapters/handlers/rest.(*Server).ConfigureAPI (inline)
         0     0% 95.72%     9.92MB  1.33%  github.com/weaviate/weaviate/adapters/handlers/rest.MakeAppState
         0     0% 95.72%    11.43MB  1.53%  github.com/weaviate/weaviate/adapters/handlers/rest.configureAPI
         0     0% 95.72%   539.87MB 72.23%  github.com/weaviate/weaviate/adapters/repos/db.(*DB).worker
         0     0% 95.72%    14.11MB  1.89%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyMapBucket
         0     0% 95.72%    20.50MB  2.74%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertySetBucket
         0     0% 95.72%    32.11MB  4.30%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyValueIndex
         0     0% 95.72%    22.50MB  3.01%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).extendInvertedIndicesLSM
         0     0% 95.72%    70.23MB  9.40%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM
         0     0% 95.72%    50.23MB  6.72%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM.func1
         0     0% 95.72%    21.50MB  2.88%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateInvertedIndexLSM
         0     0% 95.72%   539.87MB 72.23%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateVectorIndexIgnoreDelete
         0     0% 95.72%    67.73MB  9.06%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeObjectOfBatchInLSM
         0     0% 95.72%    67.23MB  8.99%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleBatchInLSM.func1
         0     0% 95.72%   539.87MB 72.23%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleObjectInAdditionalStorage
         0     0% 95.72%    14.11MB  1.89%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).MapSet
         0     0% 95.72%       22MB  2.94%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).RoaringSetAddOne
         0     0% 95.72%        8MB  1.07%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).SetAdd
         0     0% 95.72%    14.11MB  1.89%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).appendMapSorted
         0     0% 95.72%    26.50MB  3.55%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddList
         0     0% 95.72%       22MB  2.94%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddOne (inline)
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*SegmentGroup).compactIfLevelsMatch
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*SegmentGroup).compactOnce
         0     0% 95.72%    13.61MB  1.82%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMap).insert
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*compactorReplace).do
         0     0% 95.72%     5.02MB  0.67%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*segmentCursorReplace).nextWithAllKeys
         0     0% 95.72%     5.02MB  0.67%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*segmentCursorReplace).parseReplaceNode
         0     0% 95.72%       33MB  4.42%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchTree).Insert
         0     0% 95.72%    44.51MB  5.95%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.NewBitmap
         0     0% 95.72%   539.87MB 72.23%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).Add
         0     0% 95.72%    33.53MB  4.49%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).findAndConnectNeighbors
         0     0% 95.72%   497.40MB 66.55%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).normalizeVec
         0     0% 95.72%    33.53MB  4.49%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).Do
         0     0% 95.72%    30.51MB  4.08%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).connectNeighborAtLevel
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).CycleCallback
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackParallel.func1
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackParallel.func1.1
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackSequential
         0     0% 95.72%     9.10MB  1.22%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackSequential.func1
         0     0% 95.72%    16.59MB  2.22%  github.com/weaviate/weaviate/grpc/generated/protocol/v1._Weaviate_BatchObjects_Handler
         0     0% 95.72%    16.59MB  2.22%  google.golang.org/grpc.(*Server).handleStream
         0     0% 95.72%    16.59MB  2.22%  google.golang.org/grpc.(*Server).processUnaryRPC
         0     0% 95.72%    16.59MB  2.22%  google.golang.org/grpc.(*Server).serveStreams.func1.1
         0     0% 95.72%    11.93MB  1.60%  main.main
         0     0% 95.72%    34.54MB  4.62%  runtime.doInit (inline)
         0     0% 95.72%    34.54MB  4.62%  runtime.doInit1
         0     0% 95.72%    46.46MB  6.22%  runtime.main
