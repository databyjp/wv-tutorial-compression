File: weaviate
Type: inuse_space
Time: Mar 7, 2024 at 1:19pm (CET)
Showing nodes accounting for 645.40MB, 96.28% of 670.32MB total
Dropped 164 nodes (cum <= 3.35MB)
      flat  flat%   sum%        cum   cum%
  190.60MB 28.43% 28.43%   190.60MB 28.43%  github.com/weaviate/sroar.(*Bitmap).fastExpand
  112.70MB 16.81% 45.25%   113.20MB 16.89%  github.com/weaviate/weaviate/entities/storobj.(*Object).MarshalBinary
   58.50MB  8.73% 53.97%   129.02MB 19.25%  github.com/weaviate/sroar.NewBitmapWith
   40.06MB  5.98% 59.95%    40.06MB  5.98%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMap).insert
   35.50MB  5.30% 65.25%   284.60MB 42.46%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchNode).insert
   32.03MB  4.78% 70.03%   106.46MB 15.88%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).flushDataMap
      32MB  4.77% 74.80%       32MB  4.77%  github.com/weaviate/sroar.init
   29.17MB  4.35% 79.15%    30.17MB  4.50%  github.com/weaviate/weaviate/adapters/repos/db/vector/flat.(*flat).Add
   26.50MB  3.95% 83.10%    27.01MB  4.03%  bytes.(*Buffer).grow
   19.93MB  2.97% 86.08%    19.93MB  2.97%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.sortAndDedupValues
   13.57MB  2.02% 88.10%    33.50MB  5.00%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMap).flattenInOrder
   11.92MB  1.78% 89.88%    14.92MB  2.23%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).flushDataCollection
    9.92MB  1.48% 91.36%     9.92MB  1.48%  github.com/weaviate/weaviate/adapters/repos/db.New
       9MB  1.34% 92.70%        9MB  1.34%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMulti).insert
       6MB   0.9% 93.60%        6MB   0.9%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).pairPropertyWithFrequency (inline)
    5.50MB  0.82% 94.42%     5.50MB  0.82%  github.com/go-openapi/strfmt.UUID.MarshalText (inline)
    3.50MB  0.52% 94.94%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*setEncoder).Do (inline)
    3.50MB  0.52% 95.46%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).TextArray
    3.50MB  0.52% 95.99%     3.50MB  0.52%  hash/crc32.(*digest).Sum
    1.99MB   0.3% 96.28%     3.49MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).put
         0     0% 96.28%    27.01MB  4.03%  bytes.(*Buffer).Write
         0     0% 96.28%     4.51MB  0.67%  github.com/golang/protobuf/proto.Unmarshal
         0     0% 96.28%     4.51MB  0.67%  github.com/golang/protobuf/proto.UnmarshalMerge
         0     0% 96.28%   120.08MB 17.91%  github.com/weaviate/sroar.(*Bitmap).Set
         0     0% 96.28%   119.54MB 17.83%  github.com/weaviate/sroar.(*Bitmap).SetMany (inline)
         0     0% 96.28%   190.05MB 28.35%  github.com/weaviate/sroar.(*Bitmap).newContainer
         0     0% 96.28%   129.02MB 19.25%  github.com/weaviate/sroar.NewBitmap (inline)
         0     0% 96.28%    10.93MB  1.63%  github.com/weaviate/weaviate/adapters/handlers/rest.(*Server).ConfigureAPI (inline)
         0     0% 96.28%     9.92MB  1.48%  github.com/weaviate/weaviate/adapters/handlers/rest.MakeAppState
         0     0% 96.28%    10.93MB  1.63%  github.com/weaviate/weaviate/adapters/handlers/rest.configureAPI
         0     0% 96.28%    30.17MB  4.50%  github.com/weaviate/weaviate/adapters/repos/db.(*DB).worker
         0     0% 96.28%        9MB  1.34%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).AnalyzeObject
         0     0% 96.28%    37.56MB  5.60%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyMapBucket
         0     0% 96.28%       35MB  5.22%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertySetBucket
         0     0% 96.28%    64.56MB  9.63%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyValueIndex
         0     0% 96.28%    44.50MB  6.64%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).extendInvertedIndicesLSM
         0     0% 96.28%   160.69MB 23.97%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM
         0     0% 96.28%   116.69MB 17.41%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM.func1
         0     0% 96.28%       49MB  7.31%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateInvertedIndexLSM
         0     0% 96.28%    30.17MB  4.50%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateVectorIndexIgnoreDelete
         0     0% 96.28%   155.69MB 23.23%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeObjectOfBatchInLSM
         0     0% 96.28%   154.19MB 23.00%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleBatchInLSM.func1
         0     0% 96.28%    30.17MB  4.50%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleObjectInAdditionalStorage
         0     0% 96.28%        9MB  1.34%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).Object
         0     0% 96.28%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).Text (inline)
         0     0% 96.28%     5.50MB  0.82%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzeIDProp
         0     0% 96.28%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzePrimitiveProp
         0     0% 96.28%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzeProps
         0     0% 96.28%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).extendPropertiesWithPrimitive
         0     0% 96.28%    96.77MB 14.44%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).FlushAndSwitch
         0     0% 96.28%    40.06MB  5.98%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).MapSet
         0     0% 96.28%     3.49MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).Put
         0     0% 96.28%    53.51MB  7.98%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).RoaringSetAddOne
         0     0% 96.28%    12.50MB  1.86%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).SetAdd
         0     0% 96.28%    96.77MB 14.44%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).flushAndSwitchIfThresholdsMet
         0     0% 96.28%        9MB  1.34%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).append
         0     0% 96.28%    43.06MB  6.42%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).appendMapSorted
         0     0% 96.28%   106.46MB 15.88%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).flush
         0     0% 96.28%    69.51MB 10.37%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddList
         0     0% 96.28%    53.51MB  7.98%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddOne (inline)
         0     0% 96.28%    33.50MB  5.00%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMap).flattenInOrder (inline)
         0     0% 96.28%    40.06MB  5.98%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMap).insert
         0     0% 96.28%        9MB  1.34%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMulti).insert
         0     0% 96.28%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*commitLogger).writeEntry
         0     0% 96.28%       26MB  3.88%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.MapPair.Bytes
         0     0% 96.28%     3.50MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv/rwhasher.(*CRC32Writer).Hash
         0     0% 96.28%    92.01MB 13.73%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchTree).Insert
         0     0% 96.28%   248.56MB 37.08%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.NewBitmap
         0     0% 96.28%    98.14MB 14.64%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).CycleCallback
         0     0% 96.28%    94.64MB 14.12%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackParallel.func1
         0     0% 96.28%    96.14MB 14.34%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackParallel.func1.1
         0     0% 96.28%    98.64MB 14.72%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackSequential
         0     0% 96.28%    98.64MB 14.72%  github.com/weaviate/weaviate/entities/cyclemanager.(*cycleCallbackGroup).cycleCallbackSequential.func1
         0     0% 96.28%     5.52MB  0.82%  github.com/weaviate/weaviate/grpc/generated/protocol/v1._Weaviate_BatchObjects_Handler
         0     0% 96.28%     8.25MB  1.23%  google.golang.org/grpc.(*Server).handleStream
         0     0% 96.28%     8.25MB  1.23%  google.golang.org/grpc.(*Server).processUnaryRPC
         0     0% 96.28%     8.25MB  1.23%  google.golang.org/grpc.(*Server).serveStreams.func1.1
         0     0% 96.28%     4.51MB  0.67%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshal
         0     0% 96.28%     4.51MB  0.67%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshalPointer
         0     0% 96.28%     4.51MB  0.67%  google.golang.org/protobuf/proto.UnmarshalOptions.UnmarshalState
         0     0% 96.28%     4.51MB  0.67%  google.golang.org/protobuf/proto.UnmarshalOptions.unmarshal
         0     0% 96.28%    10.93MB  1.63%  main.main
         0     0% 96.28%    35.04MB  5.23%  runtime.doInit (inline)
         0     0% 96.28%    35.04MB  5.23%  runtime.doInit1
         0     0% 96.28%    45.97MB  6.86%  runtime.main
