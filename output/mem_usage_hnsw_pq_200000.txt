File: weaviate
Type: inuse_space
Time: Mar 7, 2024 at 12:41pm (CET)
Showing nodes accounting for 799.62MB, 95.59% of 836.47MB total
Dropped 102 nodes (cum <= 4.18MB)
      flat  flat%   sum%        cum   cum%
  570.33MB 68.18% 68.18%   570.33MB 68.18%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw/distancer.Normalize (inline)
   43.01MB  5.14% 73.32%    43.01MB  5.14%  github.com/weaviate/sroar.(*Bitmap).fastExpand
   42.02MB  5.02% 78.35%    42.02MB  5.02%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*vertex).appendConnectionAtLevelNoLock
      32MB  3.83% 82.17%       32MB  3.83%  github.com/weaviate/sroar.init
   17.61MB  2.11% 84.28%    17.61MB  2.11%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMap).insert
   11.53MB  1.38% 85.66%    15.53MB  1.86%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*KMeans).recluster
   11.50MB  1.37% 87.03%    46.01MB  5.50%  github.com/weaviate/sroar.NewBitmapWith
   10.56MB  1.26% 88.29%    10.56MB  1.26%  github.com/weaviate/weaviate/usecases/byteops.Float32FromByteVector (inline)
    9.92MB  1.19% 89.48%     9.92MB  1.19%  github.com/weaviate/weaviate/adapters/repos/db.New
    9.48MB  1.13% 90.61%    26.01MB  3.11%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*KMeans).Fit
    8.55MB  1.02% 91.64%     8.55MB  1.02%  github.com/weaviate/weaviate/entities/storobj.(*Object).MarshalBinary
    7.50MB   0.9% 92.53%     7.50MB   0.9%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMulti).insert
       7MB  0.84% 93.37%    61.51MB  7.35%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchNode).insert
       5MB   0.6% 93.97%        5MB   0.6%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*setEncoder).Do (inline)
    4.53MB  0.54% 94.51%     4.53MB  0.54%  google.golang.org/protobuf/internal/impl.consumeBytesNoZero
    4.50MB  0.54% 95.05%   614.06MB 73.41%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).AddBatch
    2.57MB  0.31% 95.35%    14.87MB  1.78%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).compress
       1MB  0.12% 95.47%    43.02MB  5.14%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).doAtLevel
       1MB  0.12% 95.59%    45.69MB  5.46%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).addOne
         0     0% 95.59%     5.53MB  0.66%  github.com/golang/protobuf/proto.Unmarshal
         0     0% 95.59%     5.53MB  0.66%  github.com/golang/protobuf/proto.UnmarshalMerge
         0     0% 95.59%     8.50MB  1.02%  github.com/weaviate/sroar.(*Bitmap).Set
         0     0% 95.59%     8.50MB  1.02%  github.com/weaviate/sroar.(*Bitmap).SetMany (inline)
         0     0% 95.59%    43.01MB  5.14%  github.com/weaviate/sroar.(*Bitmap).newContainer
         0     0% 95.59%    46.01MB  5.50%  github.com/weaviate/sroar.NewBitmap (inline)
         0     0% 95.59%    11.56MB  1.38%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.(*Service).BatchObjects
         0     0% 95.59%    11.06MB  1.32%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.batchFromProto
         0     0% 95.59%    11.43MB  1.37%  github.com/weaviate/weaviate/adapters/handlers/rest.(*Server).ConfigureAPI (inline)
         0     0% 95.59%     9.92MB  1.19%  github.com/weaviate/weaviate/adapters/handlers/rest.MakeAppState
         0     0% 95.59%    11.43MB  1.37%  github.com/weaviate/weaviate/adapters/handlers/rest.configureAPI
         0     0% 95.59%   614.06MB 73.41%  github.com/weaviate/weaviate/adapters/repos/db.(*DB).worker
         0     0% 95.59%        7MB  0.84%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).AnalyzeObject
         0     0% 95.59%    18.61MB  2.22%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyMapBucket
         0     0% 95.59%       29MB  3.47%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertySetBucket
         0     0% 95.59%    43.61MB  5.21%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyValueIndex
         0     0% 95.59%    40.11MB  4.80%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).extendInvertedIndicesLSM
         0     0% 95.59%    41.55MB  4.97%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM
         0     0% 95.59%     8.55MB  1.02%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM.func1
         0     0% 95.59%    41.61MB  4.97%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateInvertedIndexLSM
         0     0% 95.59%   614.06MB 73.41%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateVectorIndexIgnoreDelete
         0     0% 95.59%    38.55MB  4.61%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeObjectOfBatchInLSM
         0     0% 95.59%    37.55MB  4.49%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleBatchInLSM.func1
         0     0% 95.59%   614.06MB 73.41%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleObjectInAdditionalStorage
         0     0% 95.59%        7MB  0.84%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).Object
         0     0% 95.59%    18.61MB  2.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).MapSet
         0     0% 95.59%    31.50MB  3.77%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).RoaringSetAddOne
         0     0% 95.59%    12.50MB  1.49%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).SetAdd
         0     0% 95.59%     7.50MB   0.9%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).append
         0     0% 95.59%    18.61MB  2.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).appendMapSorted
         0     0% 95.59%       39MB  4.66%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddList
         0     0% 95.59%    31.50MB  3.77%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddOne (inline)
         0     0% 95.59%    17.61MB  2.11%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMap).insert
         0     0% 95.59%     7.50MB   0.9%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMulti).insert
         0     0% 95.59%    48.01MB  5.74%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchTree).Insert
         0     0% 95.59%    54.51MB  6.52%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.NewBitmap
         0     0% 95.59%    10.06MB  1.20%  github.com/weaviate/weaviate/adapters/repos/db/vector/cache.(*shardedLockCache[go.shape.float32]).Get
         0     0% 95.59%    10.06MB  1.20%  github.com/weaviate/weaviate/adapters/repos/db/vector/cache.(*shardedLockCache[go.shape.float32]).handleCacheMiss
         0     0% 95.59%    10.06MB  1.20%  github.com/weaviate/weaviate/adapters/repos/db/vector/cache.NewShardedFloat32LockCache.func1
         0     0% 95.59%    26.01MB  3.11%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*ProductQuantizer).Fit.func2
         0     0% 95.59%    26.01MB  3.11%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.Concurrently.func1
         0     0% 95.59%   614.06MB 73.41%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).Add
         0     0% 95.59%    14.87MB  1.78%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).compressThenCallback
         0     0% 95.59%    43.02MB  5.14%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).findAndConnectNeighbors
         0     0% 95.59%   560.27MB 66.98%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).normalizeVec
         0     0% 95.59%    43.02MB  5.14%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).Do
         0     0% 95.59%    42.02MB  5.02%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).connectNeighborAtLevel
         0     0% 95.59%    16.59MB  1.98%  github.com/weaviate/weaviate/grpc/generated/protocol/v1._Weaviate_BatchObjects_Handler
         0     0% 95.59%    20.75MB  2.48%  google.golang.org/grpc.(*Server).handleStream
         0     0% 95.59%    20.75MB  2.48%  google.golang.org/grpc.(*Server).processUnaryRPC
         0     0% 95.59%     5.03MB   0.6%  google.golang.org/grpc.(*Server).processUnaryRPC.func2
         0     0% 95.59%    20.75MB  2.48%  google.golang.org/grpc.(*Server).serveStreams.func1.1
         0     0% 95.59%     5.03MB   0.6%  google.golang.org/grpc/encoding/proto.codec.Unmarshal
         0     0% 95.59%     5.53MB  0.66%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshal
         0     0% 95.59%     5.53MB  0.66%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshalPointer
         0     0% 95.59%     5.03MB   0.6%  google.golang.org/protobuf/internal/impl.consumeMessageSliceInfo
         0     0% 95.59%     5.53MB  0.66%  google.golang.org/protobuf/proto.UnmarshalOptions.UnmarshalState
         0     0% 95.59%     5.53MB  0.66%  google.golang.org/protobuf/proto.UnmarshalOptions.unmarshal
         0     0% 95.59%    12.43MB  1.49%  main.main
         0     0% 95.59%    34.62MB  4.14%  runtime.doInit (inline)
         0     0% 95.59%    34.62MB  4.14%  runtime.doInit1
         0     0% 95.59%    47.05MB  5.62%  runtime.main
