File: weaviate
Type: inuse_space
Time: Mar 7, 2024 at 1:13pm (CET)
Showing nodes accounting for 465.18MB, 96.48% of 482.17MB total
Dropped 174 nodes (cum <= 2.41MB)
      flat  flat%   sum%        cum   cum%
  189.05MB 39.21% 39.21%   189.05MB 39.21%  github.com/weaviate/sroar.(*Bitmap).fastExpand
   98.11MB 20.35% 59.56%    98.61MB 20.45%  github.com/weaviate/weaviate/entities/storobj.(*Object).MarshalBinary
   59.50MB 12.34% 71.90%   132.52MB 27.48%  github.com/weaviate/sroar.NewBitmapWith
      32MB  6.64% 78.53%       32MB  6.64%  github.com/weaviate/sroar.init
      27MB  5.60% 84.13%   275.06MB 57.05%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchNode).insert
      13MB  2.70% 86.83%       13MB  2.70%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMulti).insert
    9.92MB  2.06% 88.89%     9.92MB  2.06%  github.com/weaviate/weaviate/adapters/repos/db.New
    6.04MB  1.25% 90.14%     8.55MB  1.77%  github.com/weaviate/weaviate/adapters/repos/db/vector/flat.(*flat).Add
       6MB  1.24% 91.38%        6MB  1.24%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*setEncoder).Do (inline)
       5MB  1.04% 92.42%        5MB  1.04%  github.com/go-openapi/strfmt.UUID.MarshalText (inline)
       5MB  1.04% 93.46%        5MB  1.04%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).TextArray
    4.50MB  0.93% 94.39%     4.50MB  0.93%  hash/crc32.(*digest).Sum
    2.55MB  0.53% 94.92%     2.55MB  0.53%  regexp/syntax.(*compiler).inst (inline)
    2.51MB  0.52% 95.44%     2.51MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw/distancer.Normalize (inline)
    2.50MB  0.52% 95.96%     2.50MB  0.52%  runtime.malg
    2.49MB  0.52% 96.48%     2.99MB  0.62%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).put
         0     0% 96.48%     2.50MB  0.52%  encoding/json.(*decodeState).object
         0     0% 96.48%     2.50MB  0.52%  encoding/json.(*decodeState).unmarshal
         0     0% 96.48%     2.50MB  0.52%  encoding/json.(*decodeState).value
         0     0% 96.48%   116.04MB 24.07%  github.com/weaviate/sroar.(*Bitmap).Set
         0     0% 96.48%   116.04MB 24.07%  github.com/weaviate/sroar.(*Bitmap).SetMany (inline)
         0     0% 96.48%   189.05MB 39.21%  github.com/weaviate/sroar.(*Bitmap).newContainer
         0     0% 96.48%   132.52MB 27.48%  github.com/weaviate/sroar.NewBitmap (inline)
         0     0% 96.48%    10.93MB  2.27%  github.com/weaviate/weaviate/adapters/handlers/rest.(*Server).ConfigureAPI (inline)
         0     0% 96.48%     9.92MB  2.06%  github.com/weaviate/weaviate/adapters/handlers/rest.MakeAppState
         0     0% 96.48%    10.93MB  2.27%  github.com/weaviate/weaviate/adapters/handlers/rest.configureAPI
         0     0% 96.48%     8.55MB  1.77%  github.com/weaviate/weaviate/adapters/repos/db.(*DB).worker
         0     0% 96.48%       10MB  2.07%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).AnalyzeObject
         0     0% 96.48%     5.88MB  1.22%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyMapBucket
         0     0% 96.48%       39MB  8.09%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertySetBucket
         0     0% 96.48%    40.38MB  8.38%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyValueIndex
         0     0% 96.48%    37.38MB  7.75%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).extendInvertedIndicesLSM
         0     0% 96.48%   147.48MB 30.59%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM
         0     0% 96.48%   102.60MB 21.28%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM.func1
         0     0% 96.48%    46.38MB  9.62%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateInvertedIndexLSM
         0     0% 96.48%     8.55MB  1.77%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateVectorIndexIgnoreDelete
         0     0% 96.48%     3.99MB  0.83%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).upsertObjectDataLSM
         0     0% 96.48%   145.98MB 30.28%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeObjectOfBatchInLSM
         0     0% 96.48%   144.98MB 30.07%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleBatchInLSM.func1
         0     0% 96.48%     8.55MB  1.77%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleObjectInAdditionalStorage
         0     0% 96.48%       10MB  2.07%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).Object
         0     0% 96.48%        5MB  1.04%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).Text (inline)
         0     0% 96.48%        5MB  1.04%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzeIDProp
         0     0% 96.48%        5MB  1.04%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzePrimitiveProp
         0     0% 96.48%        5MB  1.04%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).analyzeProps
         0     0% 96.48%        5MB  1.04%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).extendPropertiesWithPrimitive
         0     0% 96.48%     5.88MB  1.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).MapSet
         0     0% 96.48%     2.99MB  0.62%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).Put
         0     0% 96.48%    37.50MB  7.78%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).RoaringSetAddOne
         0     0% 96.48%       19MB  3.94%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).SetAdd
         0     0% 96.48%       13MB  2.70%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).append
         0     0% 96.48%     5.88MB  1.22%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).appendMapSorted
         0     0% 96.48%    54.51MB 11.30%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddList
         0     0% 96.48%    37.50MB  7.78%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddOne (inline)
         0     0% 96.48%       13MB  2.70%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMulti).insert
         0     0% 96.48%        4MB  0.83%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*commitLogger).append
         0     0% 96.48%     4.50MB  0.93%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*commitLogger).writeEntry
         0     0% 96.48%     4.50MB  0.93%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv/rwhasher.(*CRC32Writer).Hash
         0     0% 96.48%    79.01MB 16.39%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchTree).Insert
         0     0% 96.48%   248.56MB 51.55%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.NewBitmap
         0     0% 96.48%     2.51MB  0.52%  github.com/weaviate/weaviate/adapters/repos/db/vector/flat.(*flat).normalized
         0     0% 96.48%     2.51MB  0.52%  google.golang.org/grpc.(*Server).handleStream
         0     0% 96.48%     2.51MB  0.52%  google.golang.org/grpc.(*Server).processUnaryRPC
         0     0% 96.48%     2.51MB  0.52%  google.golang.org/grpc.(*Server).serveStreams.func1.1
         0     0% 96.48%    11.43MB  2.37%  main.main
         0     0% 96.48%     2.55MB  0.53%  regexp/syntax.(*compiler).compile
         0     0% 96.48%    36.04MB  7.47%  runtime.doInit (inline)
         0     0% 96.48%    36.04MB  7.47%  runtime.doInit1
         0     0% 96.48%    46.97MB  9.74%  runtime.main
         0     0% 96.48%     2.50MB  0.52%  runtime.newproc.func1
         0     0% 96.48%     2.50MB  0.52%  runtime.newproc1
         0     0% 96.48%     2.50MB  0.52%  runtime.systemstack
