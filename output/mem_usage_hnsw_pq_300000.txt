File: weaviate
Type: inuse_space
Time: Mar 7, 2024 at 12:42pm (CET)
Showing nodes accounting for 795.17MB, 95.16% of 835.58MB total
Dropped 111 nodes (cum <= 4.18MB)
      flat  flat%   sum%        cum   cum%
  570.33MB 68.26% 68.26%   570.33MB 68.26%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw/distancer.Normalize (inline)
   43.01MB  5.15% 73.40%    43.01MB  5.15%  github.com/weaviate/sroar.(*Bitmap).fastExpand
   42.02MB  5.03% 78.43%    42.02MB  5.03%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*vertex).appendConnectionAtLevelNoLock
      32MB  3.83% 82.26%       32MB  3.83%  github.com/weaviate/sroar.init
   17.61MB  2.11% 84.37%    17.61MB  2.11%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMap).insert
   14.59MB  1.75% 86.11%    14.59MB  1.75%  github.com/weaviate/weaviate/usecases/byteops.Float32FromByteVector (inline)
   11.50MB  1.38% 87.49%    46.01MB  5.51%  github.com/weaviate/sroar.NewBitmapWith
    9.92MB  1.19% 88.68%     9.92MB  1.19%  github.com/weaviate/weaviate/adapters/repos/db.New
    8.55MB  1.02% 89.70%     8.55MB  1.02%  github.com/weaviate/weaviate/entities/storobj.(*Object).MarshalBinary
    8.53MB  1.02% 90.72%    18.56MB  2.22%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*KMeans).Fit
    8.02MB  0.96% 91.68%     8.52MB  1.02%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*KMeans).recluster
    7.50MB   0.9% 92.58%     7.50MB   0.9%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchNodeMulti).insert
       7MB  0.84% 93.42%    61.51MB  7.36%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchNode).insert
       5MB   0.6% 94.02%        5MB   0.6%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*setEncoder).Do (inline)
    4.50MB  0.54% 94.56%   614.06MB 73.49%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).AddBatch
    2.57MB  0.31% 94.86%    14.87MB  1.78%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).compress
       1MB  0.12% 94.98%    43.02MB  5.15%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).doAtLevel
       1MB  0.12% 95.10%    45.69MB  5.47%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).addOne
    0.51MB 0.061% 95.16%    15.10MB  1.81%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.batchFromProto
         0     0% 95.16%     4.52MB  0.54%  github.com/golang/protobuf/proto.Unmarshal
         0     0% 95.16%     4.52MB  0.54%  github.com/golang/protobuf/proto.UnmarshalMerge
         0     0% 95.16%     8.50MB  1.02%  github.com/weaviate/sroar.(*Bitmap).Set
         0     0% 95.16%     8.50MB  1.02%  github.com/weaviate/sroar.(*Bitmap).SetMany (inline)
         0     0% 95.16%    43.01MB  5.15%  github.com/weaviate/sroar.(*Bitmap).newContainer
         0     0% 95.16%    46.01MB  5.51%  github.com/weaviate/sroar.NewBitmap (inline)
         0     0% 95.16%    15.60MB  1.87%  github.com/weaviate/weaviate/adapters/handlers/grpc/v1.(*Service).BatchObjects
         0     0% 95.16%    11.43MB  1.37%  github.com/weaviate/weaviate/adapters/handlers/rest.(*Server).ConfigureAPI (inline)
         0     0% 95.16%     9.92MB  1.19%  github.com/weaviate/weaviate/adapters/handlers/rest.MakeAppState
         0     0% 95.16%    11.43MB  1.37%  github.com/weaviate/weaviate/adapters/handlers/rest.configureAPI
         0     0% 95.16%   614.06MB 73.49%  github.com/weaviate/weaviate/adapters/repos/db.(*DB).worker
         0     0% 95.16%        7MB  0.84%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).AnalyzeObject
         0     0% 95.16%    18.61MB  2.23%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyMapBucket
         0     0% 95.16%       29MB  3.47%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertySetBucket
         0     0% 95.16%    43.61MB  5.22%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).addToPropertyValueIndex
         0     0% 95.16%    40.11MB  4.80%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).extendInvertedIndicesLSM
         0     0% 95.16%    41.55MB  4.97%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM
         0     0% 95.16%     8.55MB  1.02%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).putObjectLSM.func1
         0     0% 95.16%    41.61MB  4.98%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateInvertedIndexLSM
         0     0% 95.16%   614.06MB 73.49%  github.com/weaviate/weaviate/adapters/repos/db.(*Shard).updateVectorIndexIgnoreDelete
         0     0% 95.16%    38.55MB  4.61%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeObjectOfBatchInLSM
         0     0% 95.16%    37.55MB  4.49%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleBatchInLSM.func1
         0     0% 95.16%   614.06MB 73.49%  github.com/weaviate/weaviate/adapters/repos/db.(*objectsBatcher).storeSingleObjectInAdditionalStorage
         0     0% 95.16%        7MB  0.84%  github.com/weaviate/weaviate/adapters/repos/db/inverted.(*Analyzer).Object
         0     0% 95.16%    18.61MB  2.23%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).MapSet
         0     0% 95.16%    31.50MB  3.77%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).RoaringSetAddOne
         0     0% 95.16%    12.50MB  1.50%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Bucket).SetAdd
         0     0% 95.16%     7.50MB   0.9%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).append
         0     0% 95.16%    18.61MB  2.23%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).appendMapSorted
         0     0% 95.16%       39MB  4.67%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddList
         0     0% 95.16%    31.50MB  3.77%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*Memtable).roaringSetAddOne (inline)
         0     0% 95.16%    17.61MB  2.11%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMap).insert
         0     0% 95.16%     7.50MB   0.9%  github.com/weaviate/weaviate/adapters/repos/db/lsmkv.(*binarySearchTreeMulti).insert
         0     0% 95.16%    48.01MB  5.75%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.(*BinarySearchTree).Insert
         0     0% 95.16%    54.51MB  6.52%  github.com/weaviate/weaviate/adapters/repos/db/roaringset.NewBitmap
         0     0% 95.16%    10.06MB  1.20%  github.com/weaviate/weaviate/adapters/repos/db/vector/cache.(*shardedLockCache[go.shape.float32]).Get
         0     0% 95.16%    10.06MB  1.20%  github.com/weaviate/weaviate/adapters/repos/db/vector/cache.(*shardedLockCache[go.shape.float32]).handleCacheMiss
         0     0% 95.16%    10.06MB  1.20%  github.com/weaviate/weaviate/adapters/repos/db/vector/cache.NewShardedFloat32LockCache.func1
         0     0% 95.16%    18.56MB  2.22%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.(*ProductQuantizer).Fit.func2
         0     0% 95.16%    18.56MB  2.22%  github.com/weaviate/weaviate/adapters/repos/db/vector/compressionhelpers.Concurrently.func1
         0     0% 95.16%   614.06MB 73.49%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).Add
         0     0% 95.16%    14.87MB  1.78%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).compressThenCallback
         0     0% 95.16%    43.02MB  5.15%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).findAndConnectNeighbors
         0     0% 95.16%   560.27MB 67.05%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*hnsw).normalizeVec
         0     0% 95.16%    43.02MB  5.15%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).Do
         0     0% 95.16%    42.02MB  5.03%  github.com/weaviate/weaviate/adapters/repos/db/vector/hnsw.(*neighborFinderConnector).connectNeighborAtLevel
         0     0% 95.16%    19.62MB  2.35%  github.com/weaviate/weaviate/grpc/generated/protocol/v1._Weaviate_BatchObjects_Handler
         0     0% 95.16%    23.78MB  2.85%  google.golang.org/grpc.(*Server).handleStream
         0     0% 95.16%    23.78MB  2.85%  google.golang.org/grpc.(*Server).processUnaryRPC
         0     0% 95.16%    23.78MB  2.85%  google.golang.org/grpc.(*Server).serveStreams.func1.1
         0     0% 95.16%     4.52MB  0.54%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshal
         0     0% 95.16%     4.52MB  0.54%  google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshalPointer
         0     0% 95.16%     4.52MB  0.54%  google.golang.org/protobuf/proto.UnmarshalOptions.UnmarshalState
         0     0% 95.16%     4.52MB  0.54%  google.golang.org/protobuf/proto.UnmarshalOptions.unmarshal
         0     0% 95.16%    12.43MB  1.49%  main.main
         0     0% 95.16%    34.62MB  4.14%  runtime.doInit (inline)
         0     0% 95.16%    34.62MB  4.14%  runtime.doInit1
         0     0% 95.16%    47.05MB  5.63%  runtime.main
